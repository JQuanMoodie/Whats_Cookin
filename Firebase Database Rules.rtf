{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 service cloud.firestore \{\
  match /databases/\{database\}/documents \{\
\
    // Rules for the users collection\
    match /users/\{userId\} \{\
      // Allow read access if the user is authenticated\
      allow read: if request.auth != null;\
\
      // Allow write access if the user is authenticated and the user ID matches the authenticated user's ID\
      allow write: if request.auth != null && request.auth.uid == userId;\
\
      // Allow updating followersCount and followingCount by any authenticated user\
      allow update: if request.auth != null && (\
        request.resource.data.keys().hasAll(['followersCount', 'followingCount']) &&\
        request.resource.data.diff(resource.data).changedKeys().hasOnly(['followersCount', 'followingCount'])\
      );\
\
      // Rules for the groceryItems subcollection\
      match /groceryItems/\{itemId\} \{\
        allow read, write: if request.auth != null && request.auth.uid == userId;\
      \}\
\
      // Rules for the following subcollection\
      match /following/\{followingId\} \{\
        allow read, write: if request.auth != null && request.auth.uid == userId;\
      \}\
\
      // Rules for the followers subcollection\
      match /followers/\{followerId\} \{\
        allow read, write: if request.auth != null && request.auth.uid == userId;\
      \}\
\
      // Rules for the posts subcollection\
      match /posts/\{postId\} \{\
        // Allow read access if the user is authenticated\
        allow read: if request.auth != null;\
\
        // Allow write access if the user is authenticated and the user ID matches the authenticated user's ID\
        allow write: if request.auth != null && request.auth.uid == userId;\
\
        // Allow update to likesCount, likedUsers, and repost-related fields by any authenticated user\
        allow update: if request.auth != null &&\
          // Only allow updating likesCount, likedUsers, isRepost, repostCount, and repostedUsers fields\
          request.resource.data.diff(resource.data).changedKeys().hasOnly(['likesCount', 'likedUsers', 'isRepost', 'repostCount', 'repostedUsers']);\
      \}\
\
      // Rules for the shoppingCartItems subcollection\
      match /shoppingCartItems/\{itemId\} \{\
        allow read, write: if request.auth != null && request.auth.uid == userId;\
      \}\
\
      // Rules for the savedRecipes subcollection\
      match /savedRecipes/\{recipeId\} \{\
        allow read, write: if request.auth != null && request.auth.uid == userId;\
      \}\
\
      // Rules for the favoriteRecipes subcollection\
      match /favoriteRecipes/\{recipeId\} \{\
        // Allow read access if the user is authenticated and is accessing their own favoriteRecipes\
        allow read: if request.auth != null && request.auth.uid == userId;\
\
        // Allow write access if the user is authenticated and is adding/removing their favorite recipes\
        allow write: if request.auth != null && request.auth.uid == userId;\
      \}\
    \}\
\
    // Rules for the recipes collection\
    match /recipes/\{recipeId\} \{\
      // Allow read access to all authenticated users\
      allow read: if request.auth != null;\
\
      // Allow write access only to admins\
      allow write: if request.auth != null && request.auth.token.admin == true;\
    \}\
\
    // Rules for the favoritedRecipes collection\
    match /favoritedRecipes/\{recipeId\} \{\
      // Allow read access to all authenticated users\
      allow read: if request.auth != null;\
\
      // Allow write access if the user is authenticated and is adding/removing their favorite recipes\
      allow write: if request.auth != null && request.auth.uid in resource.data.userIds;\
    \}\
  \}\
\}\
\
}